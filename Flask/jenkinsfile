pipeline {
   agent any
   
   stages {
       stage('Login, Build, Push') {
           steps {
             dir("${env.WORKSPACE}/Flask"){
                sh "pwd"
                script {
                withDockerRegistry(credentialsId: 'DockerTeam1') {
                docker.build('anne07/team1-project').push('latest')
                     }
                    }
                }
           }
       }
        stage('Create Namespace') { //new namespace
            steps {
                script {
                        try {
                            sh 'kubectl apply -f Flask/manifest.yaml'
                            sh 'kubectl rollout restart deployment flask-deployment -n team1-namespace'  //restart everytime changes are made
                        } catch (Exception e) {
                            echo 'Exception occured:' + e.toString()
                            echo 'Handled the Exception.'
                    }
                }
            }
        }
    }
}